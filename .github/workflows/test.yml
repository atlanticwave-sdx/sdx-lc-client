# This workflow will install Python dependencies, run tests and lint
# with a variety of Python versions For more information see:
# https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:

    runs-on: ubuntu-latest

    # RabbitMQ is needed by sdx-lc.
    services:
      rabbitmq:
        image: rabbitmq:latest
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        ports:
          - 5672:5672
          - 15672:15672

    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"

    steps:
    - name: Check out sources
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'  # caching pip dependencies

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 tox black isort coveralls

    - name: Check code formatting with black
      run: |
        python -m black --check .

    - name: Check code formatting with isort
      run: |
        python -m isort --profile black .

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings.
        python -m flake8 . --count --exit-zero --max-complexity=10 --statistics

    # sdx-lc is needed by some of the tests.
    - name: Run sdx-lc
      run: |
        git clone https://github.com/atlanticwave-sdx/sdx-lc.git /tmp/sdx-lc
        cd /tmp/sdx-lc
        pip install -r requirements.txt
        python -m sdx_lc &
      env:
        SDX_MQ_IP: 'localhost'
        SDXLC_HOST: 'localhost'
        SDXLC_PORT: '8080'
        SDXLC_VERSION: '2.0.0'
        SDXLC_NAME: 'lc2'
        MQ_NAME: 'hello'
        MQ_HOST: 'localhost'
        MQ_EXCHANGE: ''
        DB_NAME: 'test-db'
        DB_CONFIG_TABLE_NAME: 'test-1'
        SUB_QUEUE: 'connection'
        SUB_EXCHANGE: 'connection'

    - name: Run tests
      run: |
        python -m tox
      env:
        SDXLC_HOST: 'localhost'
        SDXLC_PORT: '8080'
        SDXLC_VERSION: '2.0.0'

    - name: Send coverage data to coveralls.io
      run: |
        python -m coveralls --service=github
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
        COVERALLS_PARALLEL: true

  finalize:
    name: finalize
    needs: test
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
      - name: Indicate completion to coveralls.io
        run: |
          pip --no-cache-dir install --upgrade coveralls
          python -m coveralls --service=github --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
